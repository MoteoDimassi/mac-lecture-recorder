#!/usr/bin/env python3
"""
–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è Mac Lecture Recorder
"""

import streamlit as st
import os
from pathlib import Path

def main():
    st.set_page_config(
        page_title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏", 
        page_icon="‚öôÔ∏è",
        layout="wide"
    )
    
    st.title("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    st.markdown("---")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ .env –µ—Å–ª–∏ –µ—Å—Ç—å
    env_file = Path(".env")
    env_vars = {}
    
    if env_file.exists():
        with open(env_file, "r") as f:
            for line in f:
                if "=" in line and not line.strip().startswith("#"):
                    key, value = line.strip().split("=", 1)
                    env_vars[key] = value
    
    # –§–æ—Ä–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    st.subheader("üîë API –ö–ª—é—á–∏")
    
    openai_key = st.text_input(
        "OpenAI API Key", 
        value=env_vars.get("OPENAI_API_KEY", ""),
        type="password",
        help="–î–ª—è –æ–±–ª–∞—á–Ω–æ–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤"
    )
    
    openai_model = st.text_input(
        "–ú–æ–¥–µ–ª—å OpenAI", 
        value=env_vars.get("OPENAI_MODEL_SUMMARY", "gpt-4o-mini"),
        help="–ú–æ–¥–µ–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤"
    )
    
    st.subheader("üìù –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Notion")
    
    notion_token = st.text_input(
        "Notion Token", 
        value=env_vars.get("NOTION_TOKEN", ""),
        type="password",
        help="–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤ –≤ Notion"
    )
    
    notion_db_id = st.text_input(
        "Notion Database ID", 
        value=env_vars.get("NOTION_DATABASE_ID", ""),
        help="ID –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ Notion"
    )
    
    st.subheader("üéµ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–ø–∏—Å–∏")
    
    sample_rate = st.selectbox(
        "–ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏", 
        options=[16000, 22050, 44100, 48000],
        index=3,  # 48000 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        help="–ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏ –∞—É–¥–∏–æ"
    )
    
    channels = st.selectbox(
        "–ö–∞–Ω–∞–ª—ã", 
        options=[1, 2],
        index=0,  # mono –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        format_func=lambda x: "–ú–æ–Ω–æ" if x == 1 else "–°—Ç–µ—Ä–µ–æ"
    )
    
    # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", type="primary"):
        # –°–æ–∑–¥–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª
        env_content = f"""OPENAI_API_KEY={openai_key}
OPENAI_MODEL_SUMMARY={openai_model}
NOTION_TOKEN={notion_token}
NOTION_DATABASE_ID={notion_db_id}
"""
        
        with open(".env", "w") as f:
            f.write(env_content)
        
        st.success("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
        st.info("–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
    st.markdown("---")
    st.subheader("‚ÑπÔ∏è –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    
    if env_file.exists():
        with open(".env", "r") as f:
            current_env = f.read()
        st.code(current_env)
    else:
        st.info("–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏.")

if __name__ == "__main__":
    main()